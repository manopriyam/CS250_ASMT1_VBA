If condition Then
[ statements ]
[ ElseIf condition-n Then
[ elseifstatements ]]
[ Else
[ elsestatements ]]
End If 

If, Then, ElseIf, End If
AppActivate
Beep
Call
ChDir, ChDrive 
Close 
Const Public Const Private Const
Date
Declare
DefBool 	Boolean
DefByte 	Byte
DefInt 	Integer
DefLng 	Long
DefLngLng 	LongLong (valid on 64-bit platforms only)
DefLngPtr 	LongPtr
DefCur 	Currency
DefSng 	Single
DefDbl 	Double
DefDec 	Decimal (not currently supported)
DefDate 	Date
DefStr 	String
DefObj 	Object
DefVar 	Variant
DeleteSetting 
Dim
Do [{ While | Until } condition ] [ statements ] [ Exit Do ] [ statements ] Loop
End
End Function
End If
End Property
End Select
End Sub
End Type
End With
Public Private Enum
Error 
Erase
 Event 
Exit Do
Exit For
Exit Function
Exit Property
Exit Sub
FileCopy
For Each element In group
[ statements ]
[ Exit For ]
[ statements ]
Next [ element ]
For counter = start To end [ Step step ]
[ statements ]
[ Exit For ]
[ statements ]
Next [ counter ]

[Public | Private | Friend] [ Static ] Function name [ ( arglist ) ] [ As type ]
[ statements ]
[ name = expression ]
[ Exit Function ]
[ statements ]
[ name = expression ]
End Function

Get 
GoSub
GoTo
Implements 
Input #filenumber, varlist
Kill
Let
Line Input #filenumber, varname
Load
Lock Unlock
LSet 
MkDir
Name
On
Open For As Len
Option Base, Compare, Explicit, Private
Print
property Get Let Set
Public
Put
RaiseEvent
Randomize
ReDim
Rem
Reset
Resume
RmDir
RSet
Seek 
Select Case
SendKeys
Set
Set
Static 
Stop
Sub
    Stop
    Sub
    Time
    Type
    Unload
    While...Wend
    Width #
    With
    Write #



































